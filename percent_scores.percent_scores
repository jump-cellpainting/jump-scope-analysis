{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "0e4aca71",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import utils\n",
    "import matplotlib.pyplot as plt\n",
    "import random\n",
    "import plotly.express as px\n",
    "\n",
    "random.seed(9000)\n",
    "\n",
    "plt.style.use(\"seaborn-ticks\")\n",
    "plt.rcParams[\"image.cmap\"] = \"Set1\"\n",
    "plt.rcParams['axes.prop_cycle'] = plt.cycler(color=plt.cm.Set1.colors)\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "e45e49c0",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Vendor</th>\n",
       "      <th>Batch</th>\n",
       "      <th>Plate_Map_Name</th>\n",
       "      <th>Assay_Plate_Barcode</th>\n",
       "      <th>Binning</th>\n",
       "      <th>Magnification</th>\n",
       "      <th>Number_of_channels</th>\n",
       "      <th>Images_per_well</th>\n",
       "      <th>z_plane</th>\n",
       "      <th>BF_Zplanes</th>\n",
       "      <th>Anomaly</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>MolDev</td>\n",
       "      <td>Scope1_MolDev_10X</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>Plate2_PCO_6ch_4site_10XPA</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>MolDev</td>\n",
       "      <td>Scope1_MolDev_10X</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>Plate3_PCO_6ch_4site_10XPA_Crest</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>MolDev</td>\n",
       "      <td>Scope1_MolDev_10X</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>Plate3_PCO_6ch_4site_10XPA_Crestz</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>MolDev</td>\n",
       "      <td>Scope1_MolDev_20X_4site</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>Plate3_PCO_6ch_4site_20XPA_Crestz</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>MolDev</td>\n",
       "      <td>Scope1_MolDev_20X_9site</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>Plate2_PCO_6ch_9site_20XPA</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>MolDev</td>\n",
       "      <td>Scope1_MolDev_20X_9site</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>Plate3_PCO_6ch_9site_20XPA_Crest</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>MolDev</td>\n",
       "      <td>Scope1_MolDev_20X_Adaptive</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>Plate3_PCO_6ch_Adaptive_20XPA</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Nikon</td>\n",
       "      <td>Scope1_Nikon_10X</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>BR00117060a10x</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Nikon</td>\n",
       "      <td>Scope1_Nikon_10X</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>BR00117061a10x</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Nikon</td>\n",
       "      <td>Scope1_Nikon_10X</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>BR00117062a10x</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Nikon</td>\n",
       "      <td>Scope1_Nikon_10X</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>BR00117063b10x</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Nikon</td>\n",
       "      <td>Scope1_Nikon_20X</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>BR00117061a</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Nikon</td>\n",
       "      <td>Scope1_Nikon_20X</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>BR00117062a</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Nikon</td>\n",
       "      <td>Scope1_Nikon_20X</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>BR00117063b</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin1_Confocal_1Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CP_Broad_Phenix_C_BIN1_1Plane_P1</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin1_Confocal_1Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CP_Broad_Phenix_C_BIN1_1Plane_P2</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin1_Confocal_1Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CP_Broad_Phenix_C_BIN1_1Plane_P3</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin1_Confocal_1Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CP_Broad_Phenix_C_BIN1_1Plane_P4</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin1_Confocal_3Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CP_Broad_Phenix_C_BIN1_P1</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin1_Confocal_3Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CP_Broad_Phenix_C_BIN1_P2</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin1_Confocal_3Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CP_Broad_Phenix_C_BIN1_P3</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin1_Confocal_3Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CP_Broad_Phenix_C_BIN1_P4</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin1_Widefield_1Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CP_Broad_Phenix_NC_BIN1_1Plane_P1</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin1_Widefield_1Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CP_Broad_Phenix_NC_BIN1_1Plane_P2</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin1_Widefield_1Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CP_Broad_Phenix_NC_BIN1_1Plane_P3</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin1_Widefield_1Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CP_Broad_Phenix_NC_BIN1_1Plane_P4</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin1_Widefield_3Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CP_Broad_Phenix_NC_BIN1_P1</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin1_Widefield_3Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CP_Broad_Phenix_NC_BIN1_P2</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin1_Widefield_3Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CP_Broad_Phenix_NC_BIN1_P3</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin1_Widefield_3Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CP_Broad_Phenix_NC_BIN1_P4</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin2_Confocal_1Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CPBroadPhenixC1PlaneP1</td>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin2_Confocal_1Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CPBroadPhenixC1PlaneP2</td>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin2_Confocal_1Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CPBroadPhenixC1PlaneP3</td>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin2_Confocal_1Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CPBroadPhenixC1PlaneP4</td>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin2_Confocal_3Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CPBroadPhenixCP1</td>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin2_Confocal_3Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CPBroadPhenixCP2</td>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin2_Confocal_3Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CPBroadPhenixCP3</td>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin2_Confocal_3Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CPBroadPhenixCP4</td>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin2_Widefield_1Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CPBroadPhenixNC1PlaneP1</td>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin2_Widefield_1Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CPBroadPhenixNC1PlaneP2</td>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin2_Widefield_1Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CPBroadPhenixNC1PlaneP3</td>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin2_Widefield_1Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CPBroadPhenixNC1PlaneP4</td>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin2_Widefield_3Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CPBroadPhenixNCP1</td>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin2_Widefield_3Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CPBroadPhenixNCP2</td>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin2_Widefield_3Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CPBroadPhenixNCP3</td>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>PE</td>\n",
       "      <td>Scope1_PE_Bin2_Widefield_3Plane</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>CPBroadPhenixNCP4</td>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>Yokogawa_Japan</td>\n",
       "      <td>Scope1_Yokogawa_Japan_20X</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>20201021T092317</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>9</td>\n",
       "      <td>10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>Yokogawa_Japan</td>\n",
       "      <td>Scope1_Yokogawa_Japan_40X</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>20201020T134356</td>\n",
       "      <td>1</td>\n",
       "      <td>40</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>12</td>\n",
       "      <td>none</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>Yokogawa_US</td>\n",
       "      <td>Scope1_Yokogawa_US_10X</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>BRO0117014_10x</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>12</td>\n",
       "      <td>10</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>Yokogawa_US</td>\n",
       "      <td>Scope1_Yokogawa_US_20X_5Ch</td>\n",
       "      <td>JUMP-MOA_compound_platemap</td>\n",
       "      <td>BRO0117033_20xb</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>none</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Vendor                            Batch  \\\n",
       "0           MolDev                Scope1_MolDev_10X   \n",
       "1           MolDev                Scope1_MolDev_10X   \n",
       "2           MolDev                Scope1_MolDev_10X   \n",
       "3           MolDev          Scope1_MolDev_20X_4site   \n",
       "4           MolDev          Scope1_MolDev_20X_9site   \n",
       "5           MolDev          Scope1_MolDev_20X_9site   \n",
       "6           MolDev       Scope1_MolDev_20X_Adaptive   \n",
       "7            Nikon                 Scope1_Nikon_10X   \n",
       "8            Nikon                 Scope1_Nikon_10X   \n",
       "9            Nikon                 Scope1_Nikon_10X   \n",
       "10           Nikon                 Scope1_Nikon_10X   \n",
       "11           Nikon                 Scope1_Nikon_20X   \n",
       "12           Nikon                 Scope1_Nikon_20X   \n",
       "13           Nikon                 Scope1_Nikon_20X   \n",
       "14              PE   Scope1_PE_Bin1_Confocal_1Plane   \n",
       "15              PE   Scope1_PE_Bin1_Confocal_1Plane   \n",
       "16              PE   Scope1_PE_Bin1_Confocal_1Plane   \n",
       "17              PE   Scope1_PE_Bin1_Confocal_1Plane   \n",
       "18              PE   Scope1_PE_Bin1_Confocal_3Plane   \n",
       "19              PE   Scope1_PE_Bin1_Confocal_3Plane   \n",
       "20              PE   Scope1_PE_Bin1_Confocal_3Plane   \n",
       "21              PE   Scope1_PE_Bin1_Confocal_3Plane   \n",
       "22              PE  Scope1_PE_Bin1_Widefield_1Plane   \n",
       "23              PE  Scope1_PE_Bin1_Widefield_1Plane   \n",
       "24              PE  Scope1_PE_Bin1_Widefield_1Plane   \n",
       "25              PE  Scope1_PE_Bin1_Widefield_1Plane   \n",
       "26              PE  Scope1_PE_Bin1_Widefield_3Plane   \n",
       "27              PE  Scope1_PE_Bin1_Widefield_3Plane   \n",
       "28              PE  Scope1_PE_Bin1_Widefield_3Plane   \n",
       "29              PE  Scope1_PE_Bin1_Widefield_3Plane   \n",
       "30              PE   Scope1_PE_Bin2_Confocal_1Plane   \n",
       "31              PE   Scope1_PE_Bin2_Confocal_1Plane   \n",
       "32              PE   Scope1_PE_Bin2_Confocal_1Plane   \n",
       "33              PE   Scope1_PE_Bin2_Confocal_1Plane   \n",
       "34              PE   Scope1_PE_Bin2_Confocal_3Plane   \n",
       "35              PE   Scope1_PE_Bin2_Confocal_3Plane   \n",
       "36              PE   Scope1_PE_Bin2_Confocal_3Plane   \n",
       "37              PE   Scope1_PE_Bin2_Confocal_3Plane   \n",
       "38              PE  Scope1_PE_Bin2_Widefield_1Plane   \n",
       "39              PE  Scope1_PE_Bin2_Widefield_1Plane   \n",
       "40              PE  Scope1_PE_Bin2_Widefield_1Plane   \n",
       "41              PE  Scope1_PE_Bin2_Widefield_1Plane   \n",
       "42              PE  Scope1_PE_Bin2_Widefield_3Plane   \n",
       "43              PE  Scope1_PE_Bin2_Widefield_3Plane   \n",
       "44              PE  Scope1_PE_Bin2_Widefield_3Plane   \n",
       "45              PE  Scope1_PE_Bin2_Widefield_3Plane   \n",
       "46  Yokogawa_Japan        Scope1_Yokogawa_Japan_20X   \n",
       "47  Yokogawa_Japan        Scope1_Yokogawa_Japan_40X   \n",
       "48     Yokogawa_US           Scope1_Yokogawa_US_10X   \n",
       "49     Yokogawa_US       Scope1_Yokogawa_US_20X_5Ch   \n",
       "\n",
       "                Plate_Map_Name                Assay_Plate_Barcode  Binning  \\\n",
       "0   JUMP-MOA_compound_platemap         Plate2_PCO_6ch_4site_10XPA        1   \n",
       "1   JUMP-MOA_compound_platemap   Plate3_PCO_6ch_4site_10XPA_Crest        1   \n",
       "2   JUMP-MOA_compound_platemap  Plate3_PCO_6ch_4site_10XPA_Crestz        1   \n",
       "3   JUMP-MOA_compound_platemap  Plate3_PCO_6ch_4site_20XPA_Crestz        1   \n",
       "4   JUMP-MOA_compound_platemap         Plate2_PCO_6ch_9site_20XPA        1   \n",
       "5   JUMP-MOA_compound_platemap   Plate3_PCO_6ch_9site_20XPA_Crest        1   \n",
       "6   JUMP-MOA_compound_platemap      Plate3_PCO_6ch_Adaptive_20XPA        1   \n",
       "7   JUMP-MOA_compound_platemap                     BR00117060a10x        1   \n",
       "8   JUMP-MOA_compound_platemap                     BR00117061a10x        1   \n",
       "9   JUMP-MOA_compound_platemap                     BR00117062a10x        1   \n",
       "10  JUMP-MOA_compound_platemap                     BR00117063b10x        1   \n",
       "11  JUMP-MOA_compound_platemap                        BR00117061a        1   \n",
       "12  JUMP-MOA_compound_platemap                        BR00117062a        1   \n",
       "13  JUMP-MOA_compound_platemap                        BR00117063b        1   \n",
       "14  JUMP-MOA_compound_platemap   CP_Broad_Phenix_C_BIN1_1Plane_P1        1   \n",
       "15  JUMP-MOA_compound_platemap   CP_Broad_Phenix_C_BIN1_1Plane_P2        1   \n",
       "16  JUMP-MOA_compound_platemap   CP_Broad_Phenix_C_BIN1_1Plane_P3        1   \n",
       "17  JUMP-MOA_compound_platemap   CP_Broad_Phenix_C_BIN1_1Plane_P4        1   \n",
       "18  JUMP-MOA_compound_platemap          CP_Broad_Phenix_C_BIN1_P1        1   \n",
       "19  JUMP-MOA_compound_platemap          CP_Broad_Phenix_C_BIN1_P2        1   \n",
       "20  JUMP-MOA_compound_platemap          CP_Broad_Phenix_C_BIN1_P3        1   \n",
       "21  JUMP-MOA_compound_platemap          CP_Broad_Phenix_C_BIN1_P4        1   \n",
       "22  JUMP-MOA_compound_platemap  CP_Broad_Phenix_NC_BIN1_1Plane_P1        1   \n",
       "23  JUMP-MOA_compound_platemap  CP_Broad_Phenix_NC_BIN1_1Plane_P2        1   \n",
       "24  JUMP-MOA_compound_platemap  CP_Broad_Phenix_NC_BIN1_1Plane_P3        1   \n",
       "25  JUMP-MOA_compound_platemap  CP_Broad_Phenix_NC_BIN1_1Plane_P4        1   \n",
       "26  JUMP-MOA_compound_platemap         CP_Broad_Phenix_NC_BIN1_P1        1   \n",
       "27  JUMP-MOA_compound_platemap         CP_Broad_Phenix_NC_BIN1_P2        1   \n",
       "28  JUMP-MOA_compound_platemap         CP_Broad_Phenix_NC_BIN1_P3        1   \n",
       "29  JUMP-MOA_compound_platemap         CP_Broad_Phenix_NC_BIN1_P4        1   \n",
       "30  JUMP-MOA_compound_platemap             CPBroadPhenixC1PlaneP1        2   \n",
       "31  JUMP-MOA_compound_platemap             CPBroadPhenixC1PlaneP2        2   \n",
       "32  JUMP-MOA_compound_platemap             CPBroadPhenixC1PlaneP3        2   \n",
       "33  JUMP-MOA_compound_platemap             CPBroadPhenixC1PlaneP4        2   \n",
       "34  JUMP-MOA_compound_platemap                   CPBroadPhenixCP1        2   \n",
       "35  JUMP-MOA_compound_platemap                   CPBroadPhenixCP2        2   \n",
       "36  JUMP-MOA_compound_platemap                   CPBroadPhenixCP3        2   \n",
       "37  JUMP-MOA_compound_platemap                   CPBroadPhenixCP4        2   \n",
       "38  JUMP-MOA_compound_platemap            CPBroadPhenixNC1PlaneP1        2   \n",
       "39  JUMP-MOA_compound_platemap            CPBroadPhenixNC1PlaneP2        2   \n",
       "40  JUMP-MOA_compound_platemap            CPBroadPhenixNC1PlaneP3        2   \n",
       "41  JUMP-MOA_compound_platemap            CPBroadPhenixNC1PlaneP4        2   \n",
       "42  JUMP-MOA_compound_platemap                  CPBroadPhenixNCP1        2   \n",
       "43  JUMP-MOA_compound_platemap                  CPBroadPhenixNCP2        2   \n",
       "44  JUMP-MOA_compound_platemap                  CPBroadPhenixNCP3        2   \n",
       "45  JUMP-MOA_compound_platemap                  CPBroadPhenixNCP4        2   \n",
       "46  JUMP-MOA_compound_platemap                    20201021T092317        1   \n",
       "47  JUMP-MOA_compound_platemap                    20201020T134356        1   \n",
       "48  JUMP-MOA_compound_platemap                     BRO0117014_10x        1   \n",
       "49  JUMP-MOA_compound_platemap                    BRO0117033_20xb        1   \n",
       "\n",
       "    Magnification  Number_of_channels  Images_per_well  z_plane BF_Zplanes  \\\n",
       "0              10                   6                4        1        NaN   \n",
       "1              10                   6                4        1        NaN   \n",
       "2              10                   6                4        3        NaN   \n",
       "3              20                   6                4        3        NaN   \n",
       "4              20                   6                9        1        NaN   \n",
       "5              20                   6                9        1        NaN   \n",
       "6              20                   6                3        1        NaN   \n",
       "7              10                   4                1        1        NaN   \n",
       "8              10                   4                1        1        NaN   \n",
       "9              10                   4                1        1        NaN   \n",
       "10             10                   4                1        1        NaN   \n",
       "11             20                   4                9        1        NaN   \n",
       "12             20                   4                9        1        NaN   \n",
       "13             20                   4                9        1        NaN   \n",
       "14             20                   5                3        1        NaN   \n",
       "15             20                   5                3        1        NaN   \n",
       "16             20                   5                3        1        NaN   \n",
       "17             20                   5                3        1        NaN   \n",
       "18             20                   5                3        3        NaN   \n",
       "19             20                   5                3        3        NaN   \n",
       "20             20                   5                3        3        NaN   \n",
       "21             20                   5                3        3        NaN   \n",
       "22             20                   5                3        1        NaN   \n",
       "23             20                   5                3        1        NaN   \n",
       "24             20                   5                3        1        NaN   \n",
       "25             20                   5                3        1        NaN   \n",
       "26             20                   5                3        3        NaN   \n",
       "27             20                   5                3        3        NaN   \n",
       "28             20                   5                3        3        NaN   \n",
       "29             20                   5                3        3        NaN   \n",
       "30             20                   5                3        1        NaN   \n",
       "31             20                   5                3        1        NaN   \n",
       "32             20                   5                3        1        NaN   \n",
       "33             20                   5                3        1        NaN   \n",
       "34             20                   5                3        3        NaN   \n",
       "35             20                   5                3        3        NaN   \n",
       "36             20                   5                3        3        NaN   \n",
       "37             20                   5                3        3        NaN   \n",
       "38             20                   5                3        1        NaN   \n",
       "39             20                   5                3        1        NaN   \n",
       "40             20                   5                3        1        NaN   \n",
       "41             20                   5                3        1        NaN   \n",
       "42             20                   5                3        3        NaN   \n",
       "43             20                   5                3        3        NaN   \n",
       "44             20                   5                3        3        NaN   \n",
       "45             20                   5                3        3        NaN   \n",
       "46             20                   5                9       10        NaN   \n",
       "47             40                   5                2       12       none   \n",
       "48             10                   6                4       12         10   \n",
       "49             20                   5                9        1       none   \n",
       "\n",
       "   Anomaly  \n",
       "0     none  \n",
       "1     none  \n",
       "2     none  \n",
       "3     none  \n",
       "4     none  \n",
       "5     none  \n",
       "6     none  \n",
       "7     none  \n",
       "8     none  \n",
       "9     none  \n",
       "10    none  \n",
       "11    none  \n",
       "12    none  \n",
       "13    none  \n",
       "14    none  \n",
       "15    none  \n",
       "16    none  \n",
       "17    none  \n",
       "18    none  \n",
       "19    none  \n",
       "20    none  \n",
       "21    none  \n",
       "22    none  \n",
       "23    none  \n",
       "24    none  \n",
       "25    none  \n",
       "26    none  \n",
       "27    none  \n",
       "28    none  \n",
       "29    none  \n",
       "30    none  \n",
       "31    none  \n",
       "32    none  \n",
       "33    none  \n",
       "34    none  \n",
       "35    none  \n",
       "36    none  \n",
       "37    none  \n",
       "38    none  \n",
       "39    none  \n",
       "40    none  \n",
       "41    none  \n",
       "42    none  \n",
       "43    none  \n",
       "44    none  \n",
       "45    none  \n",
       "46    none  \n",
       "47    none  \n",
       "48    none  \n",
       "49    none  "
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "n_samples = 1000\n",
    "n_replicates = 4  #number of sample replicates within each plate \n",
    "\n",
    "corr_replicating_df = pd.DataFrame()\n",
    "group_by_feature = 'Metadata_broad_sample'\n",
    "#batch = \"Scope1_MolDev_10X\"\n",
    "\n",
    "\n",
    "experiment_df = (\n",
    "    pd.read_csv('../output/experiment-metadata.tsv', sep='\\t')\n",
    "#    .query('Batch==@batch')\n",
    ")\n",
    "experiment_df.head(50)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "bb70f66d",
   "metadata": {},
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "No objects to concatenate",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "Input \u001b[0;32mIn [34]\u001b[0m, in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      8\u001b[0m             plate_data \u001b[38;5;241m=\u001b[39m batch_data\u001b[38;5;241m.\u001b[39mloc[batch_data[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mAssay_Plate_Barcode\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m==\u001b[39m a_plate]\n\u001b[1;32m      9\u001b[0m \u001b[38;5;66;03m#            print([a_plate, len(plate_data)])\u001b[39;00m\n\u001b[0;32m---> 10\u001b[0m             plate_df \u001b[38;5;241m=\u001b[39m \u001b[43mutils\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mload_data\u001b[49m\u001b[43m(\u001b[49m\u001b[43mbatch\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mplate\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mnormalized_feature_select_negcon_batch.csv.gz\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\n\u001b[1;32m     11\u001b[0m             plate_df \u001b[38;5;241m=\u001b[39m utils\u001b[38;5;241m.\u001b[39mremove_negcon_empty_wells(plate_df)\n\u001b[1;32m     13\u001b[0m             replicating_corr \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mlist\u001b[39m(utils\u001b[38;5;241m.\u001b[39mcorr_between_replicates(plate_df, group_by_feature))\n",
      "File \u001b[0;32m~/Documents/GitHub_Repos/jump-cellpainting/jump-scope-analysis/Scope1_MolDev_10X/utils.py:22\u001b[0m, in \u001b[0;36mload_data\u001b[0;34m(exp, plate, filetype)\u001b[0m\n\u001b[1;32m     17\u001b[0m path \u001b[38;5;241m=\u001b[39m os\u001b[38;5;241m.\u001b[39mpath\u001b[38;5;241m.\u001b[39mjoin(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m../../jump-scope/profiles\u001b[39m\u001b[38;5;124m'\u001b[39m,\n\u001b[1;32m     18\u001b[0m                     \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mexp\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m'\u001b[39m,\n\u001b[1;32m     19\u001b[0m                     \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mplate\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m'\u001b[39m,\n\u001b[1;32m     20\u001b[0m                     \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m*_\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mfiletype\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m'\u001b[39m)\n\u001b[1;32m     21\u001b[0m files \u001b[38;5;241m=\u001b[39m glob\u001b[38;5;241m.\u001b[39mglob(path)\n\u001b[0;32m---> 22\u001b[0m df \u001b[38;5;241m=\u001b[39m \u001b[43mpd\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mconcat\u001b[49m\u001b[43m(\u001b[49m\u001b[43mpd\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mread_csv\u001b[49m\u001b[43m(\u001b[49m\u001b[43m_\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlow_memory\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43;01mFalse\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mfor\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43m_\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;129;43;01min\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43mfiles\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     23\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m df\n",
      "File \u001b[0;32m~/miniconda3/envs/jump-scope-analysis/lib/python3.8/site-packages/pandas/core/reshape/concat.py:285\u001b[0m, in \u001b[0;36mconcat\u001b[0;34m(objs, axis, join, ignore_index, keys, levels, names, verify_integrity, sort, copy)\u001b[0m\n\u001b[1;32m     82\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mconcat\u001b[39m(\n\u001b[1;32m     83\u001b[0m     objs: Union[Iterable[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mNDFrame\u001b[39m\u001b[38;5;124m\"\u001b[39m], Mapping[Label, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mNDFrame\u001b[39m\u001b[38;5;124m\"\u001b[39m]],\n\u001b[1;32m     84\u001b[0m     axis\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m0\u001b[39m,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m     92\u001b[0m     copy: \u001b[38;5;28mbool\u001b[39m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mTrue\u001b[39;00m,\n\u001b[1;32m     93\u001b[0m ) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m FrameOrSeriesUnion:\n\u001b[1;32m     94\u001b[0m     \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m     95\u001b[0m \u001b[38;5;124;03m    Concatenate pandas objects along a particular axis with optional set logic\u001b[39;00m\n\u001b[1;32m     96\u001b[0m \u001b[38;5;124;03m    along the other axes.\u001b[39;00m\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    283\u001b[0m \u001b[38;5;124;03m    ValueError: Indexes have overlapping values: ['a']\u001b[39;00m\n\u001b[1;32m    284\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[0;32m--> 285\u001b[0m     op \u001b[38;5;241m=\u001b[39m \u001b[43m_Concatenator\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    286\u001b[0m \u001b[43m        \u001b[49m\u001b[43mobjs\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    287\u001b[0m \u001b[43m        \u001b[49m\u001b[43maxis\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43maxis\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    288\u001b[0m \u001b[43m        \u001b[49m\u001b[43mignore_index\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mignore_index\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    289\u001b[0m \u001b[43m        \u001b[49m\u001b[43mjoin\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mjoin\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    290\u001b[0m \u001b[43m        \u001b[49m\u001b[43mkeys\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mkeys\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    291\u001b[0m \u001b[43m        \u001b[49m\u001b[43mlevels\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlevels\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    292\u001b[0m \u001b[43m        \u001b[49m\u001b[43mnames\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mnames\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    293\u001b[0m \u001b[43m        \u001b[49m\u001b[43mverify_integrity\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mverify_integrity\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    294\u001b[0m \u001b[43m        \u001b[49m\u001b[43mcopy\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcopy\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    295\u001b[0m \u001b[43m        \u001b[49m\u001b[43msort\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43msort\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    296\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    298\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m op\u001b[38;5;241m.\u001b[39mget_result()\n",
      "File \u001b[0;32m~/miniconda3/envs/jump-scope-analysis/lib/python3.8/site-packages/pandas/core/reshape/concat.py:342\u001b[0m, in \u001b[0;36m_Concatenator.__init__\u001b[0;34m(self, objs, axis, join, keys, levels, names, ignore_index, verify_integrity, copy, sort)\u001b[0m\n\u001b[1;32m    339\u001b[0m     objs \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mlist\u001b[39m(objs)\n\u001b[1;32m    341\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mlen\u001b[39m(objs) \u001b[38;5;241m==\u001b[39m \u001b[38;5;241m0\u001b[39m:\n\u001b[0;32m--> 342\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mNo objects to concatenate\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m    344\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m keys \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m    345\u001b[0m     objs \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mlist\u001b[39m(com\u001b[38;5;241m.\u001b[39mnot_none(\u001b[38;5;241m*\u001b[39mobjs))\n",
      "\u001b[0;31mValueError\u001b[0m: No objects to concatenate"
     ]
    }
   ],
   "source": [
    "for a_vendor in experiment_df[\"Vendor\"].unique():\n",
    "    vendor_data = experiment_df.loc[experiment_df[\"Vendor\"] == a_vendor]\n",
    "#    print([a_vendor, len(vendor_data)])\n",
    "    for a_batch in vendor_data[\"Batch\"].unique():\n",
    "        batch_data = vendor_data.loc[vendor_data[\"Batch\"] == a_batch]\n",
    "#        print([a_batch, len(batch_data)])\n",
    "        for a_plate in batch_data[\"Assay_Plate_Barcode\"].unique():\n",
    "            plate_data = batch_data.loc[batch_data[\"Assay_Plate_Barcode\"] == a_plate]\n",
    "#            print([a_plate, len(plate_data)])\n",
    "            plate_df = utils.load_data(batch, plate, \"normalized_feature_select_negcon_batch.csv.gz\")\n",
    "            plate_df = utils.remove_negcon_empty_wells(plate_df)\n",
    "                \n",
    "            replicating_corr = list(utils.corr_between_replicates(plate_df, group_by_feature))\n",
    "            null_replicating = list(utils.corr_between_non_replicates(plate_df, n_samples=n_samples, n_replicates=n_replicates, metadata_compound_name = group_by_feature))\n",
    "\n",
    "            prop_95_replicating, value_95_replicating = utils.percent_score(null_replicating, replicating_corr, how='right')\n",
    "\n",
    "            corr_replicating_df = corr_replicating_df.append({'Description':f'{plate}',\n",
    "                                                      'Replicating':replicating_corr,\n",
    "                                                      'Null_Replicating':null_replicating,\n",
    "                                                      'Percent_Replicating':'%.1f'%prop_95_replicating,\n",
    "                                                      'Value_95':value_95_replicating}, ignore_index=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "b41115c0",
   "metadata": {},
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "'MolDev'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "Input \u001b[0;32mIn [22]\u001b[0m, in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m vendor \u001b[38;5;129;01min\u001b[39;00m experiment_df\u001b[38;5;241m.\u001b[39mVendor:\n\u001b[0;32m----> 2\u001b[0m     \u001b[38;5;28;01mfor\u001b[39;00m batch \u001b[38;5;129;01min\u001b[39;00m \u001b[43mexperiment_df\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mBatch\u001b[49m\u001b[43m[\u001b[49m\u001b[43mvendor\u001b[49m\u001b[43m]\u001b[49m:\n\u001b[1;32m      3\u001b[0m         \u001b[38;5;28;01mfor\u001b[39;00m plate \u001b[38;5;129;01min\u001b[39;00m experiment_df\u001b[38;5;241m.\u001b[39mAssay_Plate_Barcode[vendor][batch]:\n\u001b[1;32m      4\u001b[0m             plate_df \u001b[38;5;241m=\u001b[39m utils\u001b[38;5;241m.\u001b[39mload_data(batch, plate, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mnormalized_feature_select_negcon_batch.csv.gz\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n",
      "File \u001b[0;32m~/miniconda3/envs/jump-scope-analysis/lib/python3.8/site-packages/pandas/core/series.py:853\u001b[0m, in \u001b[0;36mSeries.__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m    850\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_values[key]\n\u001b[1;32m    852\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m key_is_scalar:\n\u001b[0;32m--> 853\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_get_value\u001b[49m\u001b[43m(\u001b[49m\u001b[43mkey\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    855\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m is_hashable(key):\n\u001b[1;32m    856\u001b[0m     \u001b[38;5;66;03m# Otherwise index.get_value will raise InvalidIndexError\u001b[39;00m\n\u001b[1;32m    857\u001b[0m     \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m    858\u001b[0m         \u001b[38;5;66;03m# For labels that don't resolve as scalars like tuples and frozensets\u001b[39;00m\n",
      "File \u001b[0;32m~/miniconda3/envs/jump-scope-analysis/lib/python3.8/site-packages/pandas/core/series.py:961\u001b[0m, in \u001b[0;36mSeries._get_value\u001b[0;34m(self, label, takeable)\u001b[0m\n\u001b[1;32m    958\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_values[label]\n\u001b[1;32m    960\u001b[0m \u001b[38;5;66;03m# Similar to Index.get_value, but we do not fall back to positional\u001b[39;00m\n\u001b[0;32m--> 961\u001b[0m loc \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mindex\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mlabel\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    962\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mindex\u001b[38;5;241m.\u001b[39m_get_values_for_loc(\u001b[38;5;28mself\u001b[39m, loc, label)\n",
      "File \u001b[0;32m~/miniconda3/envs/jump-scope-analysis/lib/python3.8/site-packages/pandas/core/indexes/range.py:354\u001b[0m, in \u001b[0;36mRangeIndex.get_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m    352\u001b[0m         \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n\u001b[1;32m    353\u001b[0m             \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(key) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01merr\u001b[39;00m\n\u001b[0;32m--> 354\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(key)\n\u001b[1;32m    355\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28msuper\u001b[39m()\u001b[38;5;241m.\u001b[39mget_loc(key, method\u001b[38;5;241m=\u001b[39mmethod, tolerance\u001b[38;5;241m=\u001b[39mtolerance)\n",
      "\u001b[0;31mKeyError\u001b[0m: 'MolDev'"
     ]
    }
   ],
   "source": [
    "for vendor in experiment_df.Vendor:\n",
    "    for batch in experiment_df.Batch[vendor]:\n",
    "        for plate in experiment_df.Assay_Plate_Barcode[vendor][batch]:\n",
    "            plate_df = utils.load_data(batch, plate, \"normalized_feature_select_negcon_batch.csv.gz\")\n",
    "            plate_df = utils.remove_negcon_empty_wells(plate_df)\n",
    "                \n",
    "            replicating_corr = list(utils.corr_between_replicates(plate_df, group_by_feature))\n",
    "            null_replicating = list(utils.corr_between_non_replicates(plate_df, n_samples=n_samples, n_replicates=n_replicates, metadata_compound_name = group_by_feature))\n",
    "\n",
    "            prop_95_replicating, value_95_replicating = utils.percent_score(null_replicating, replicating_corr, how='right')\n",
    "\n",
    "            corr_replicating_df = corr_replicating_df.append({'Description':f'{plate}',\n",
    "                                                      'Replicating':replicating_corr,\n",
    "                                                      'Null_Replicating':null_replicating,\n",
    "                                                      'Percent_Replicating':'%.1f'%prop_95_replicating,\n",
    "                                                      'Value_95':value_95_replicating}, ignore_index=True)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "c0ad935c",
   "metadata": {},
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "No objects to concatenate",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "Input \u001b[0;32mIn [9]\u001b[0m, in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m plate \u001b[38;5;129;01min\u001b[39;00m experiment_df\u001b[38;5;241m.\u001b[39mAssay_Plate_Barcode:\n\u001b[0;32m----> 2\u001b[0m     plate_df \u001b[38;5;241m=\u001b[39m \u001b[43mutils\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mload_data\u001b[49m\u001b[43m(\u001b[49m\u001b[43mbatch\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mplate\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mnormalized_feature_select_negcon_batch.csv.gz\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\n\u001b[1;32m      4\u001b[0m     plate_df \u001b[38;5;241m=\u001b[39m utils\u001b[38;5;241m.\u001b[39mremove_negcon_empty_wells(plate_df)\n\u001b[1;32m      6\u001b[0m     replicating_corr \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mlist\u001b[39m(utils\u001b[38;5;241m.\u001b[39mcorr_between_replicates(plate_df, group_by_feature))\n",
      "File \u001b[0;32m~/Documents/GitHub_Repos/jump-cellpainting/jump-scope-analysis/Scope1_MolDev_10X/utils.py:22\u001b[0m, in \u001b[0;36mload_data\u001b[0;34m(exp, plate, filetype)\u001b[0m\n\u001b[1;32m     17\u001b[0m path \u001b[38;5;241m=\u001b[39m os\u001b[38;5;241m.\u001b[39mpath\u001b[38;5;241m.\u001b[39mjoin(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m../../jump-scope/profiles\u001b[39m\u001b[38;5;124m'\u001b[39m,\n\u001b[1;32m     18\u001b[0m                     \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mexp\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m'\u001b[39m,\n\u001b[1;32m     19\u001b[0m                     \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mplate\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m'\u001b[39m,\n\u001b[1;32m     20\u001b[0m                     \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m*_\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mfiletype\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m'\u001b[39m)\n\u001b[1;32m     21\u001b[0m files \u001b[38;5;241m=\u001b[39m glob\u001b[38;5;241m.\u001b[39mglob(path)\n\u001b[0;32m---> 22\u001b[0m df \u001b[38;5;241m=\u001b[39m \u001b[43mpd\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mconcat\u001b[49m\u001b[43m(\u001b[49m\u001b[43mpd\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mread_csv\u001b[49m\u001b[43m(\u001b[49m\u001b[43m_\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlow_memory\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43;01mFalse\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mfor\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43m_\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;129;43;01min\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43mfiles\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     23\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m df\n",
      "File \u001b[0;32m~/miniconda3/envs/jump-scope-analysis/lib/python3.8/site-packages/pandas/core/reshape/concat.py:285\u001b[0m, in \u001b[0;36mconcat\u001b[0;34m(objs, axis, join, ignore_index, keys, levels, names, verify_integrity, sort, copy)\u001b[0m\n\u001b[1;32m     82\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mconcat\u001b[39m(\n\u001b[1;32m     83\u001b[0m     objs: Union[Iterable[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mNDFrame\u001b[39m\u001b[38;5;124m\"\u001b[39m], Mapping[Label, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mNDFrame\u001b[39m\u001b[38;5;124m\"\u001b[39m]],\n\u001b[1;32m     84\u001b[0m     axis\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m0\u001b[39m,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m     92\u001b[0m     copy: \u001b[38;5;28mbool\u001b[39m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mTrue\u001b[39;00m,\n\u001b[1;32m     93\u001b[0m ) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m FrameOrSeriesUnion:\n\u001b[1;32m     94\u001b[0m     \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m     95\u001b[0m \u001b[38;5;124;03m    Concatenate pandas objects along a particular axis with optional set logic\u001b[39;00m\n\u001b[1;32m     96\u001b[0m \u001b[38;5;124;03m    along the other axes.\u001b[39;00m\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    283\u001b[0m \u001b[38;5;124;03m    ValueError: Indexes have overlapping values: ['a']\u001b[39;00m\n\u001b[1;32m    284\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[0;32m--> 285\u001b[0m     op \u001b[38;5;241m=\u001b[39m \u001b[43m_Concatenator\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    286\u001b[0m \u001b[43m        \u001b[49m\u001b[43mobjs\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    287\u001b[0m \u001b[43m        \u001b[49m\u001b[43maxis\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43maxis\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    288\u001b[0m \u001b[43m        \u001b[49m\u001b[43mignore_index\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mignore_index\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    289\u001b[0m \u001b[43m        \u001b[49m\u001b[43mjoin\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mjoin\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    290\u001b[0m \u001b[43m        \u001b[49m\u001b[43mkeys\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mkeys\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    291\u001b[0m \u001b[43m        \u001b[49m\u001b[43mlevels\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlevels\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    292\u001b[0m \u001b[43m        \u001b[49m\u001b[43mnames\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mnames\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    293\u001b[0m \u001b[43m        \u001b[49m\u001b[43mverify_integrity\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mverify_integrity\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    294\u001b[0m \u001b[43m        \u001b[49m\u001b[43mcopy\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcopy\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    295\u001b[0m \u001b[43m        \u001b[49m\u001b[43msort\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43msort\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    296\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    298\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m op\u001b[38;5;241m.\u001b[39mget_result()\n",
      "File \u001b[0;32m~/miniconda3/envs/jump-scope-analysis/lib/python3.8/site-packages/pandas/core/reshape/concat.py:342\u001b[0m, in \u001b[0;36m_Concatenator.__init__\u001b[0;34m(self, objs, axis, join, keys, levels, names, ignore_index, verify_integrity, copy, sort)\u001b[0m\n\u001b[1;32m    339\u001b[0m     objs \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mlist\u001b[39m(objs)\n\u001b[1;32m    341\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mlen\u001b[39m(objs) \u001b[38;5;241m==\u001b[39m \u001b[38;5;241m0\u001b[39m:\n\u001b[0;32m--> 342\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mNo objects to concatenate\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m    344\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m keys \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m    345\u001b[0m     objs \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mlist\u001b[39m(com\u001b[38;5;241m.\u001b[39mnot_none(\u001b[38;5;241m*\u001b[39mobjs))\n",
      "\u001b[0;31mValueError\u001b[0m: No objects to concatenate"
     ]
    }
   ],
   "source": [
    "for plate in experiment_df.Assay_Plate_Barcode:\n",
    "    plate_df = utils.load_data(batch, plate, \"normalized_feature_select_negcon_batch.csv.gz\")\n",
    "\n",
    "    plate_df = utils.remove_negcon_empty_wells(plate_df)\n",
    "\n",
    "    replicating_corr = list(utils.corr_between_replicates(plate_df, group_by_feature))\n",
    "    null_replicating = list(utils.corr_between_non_replicates(plate_df, n_samples=n_samples, n_replicates=n_replicates, metadata_compound_name = group_by_feature))\n",
    "\n",
    "    prop_95_replicating, value_95_replicating = utils.percent_score(null_replicating, replicating_corr, how='right')\n",
    "\n",
    "    corr_replicating_df = corr_replicating_df.append({'Description':f'{plate}',\n",
    "                                                      'Replicating':replicating_corr,\n",
    "                                                      'Null_Replicating':null_replicating,\n",
    "                                                      'Percent_Replicating':'%.1f'%prop_95_replicating,\n",
    "                                                      'Value_95':value_95_replicating}, ignore_index=True)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "304d1732",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "| Description                       |   Percent_Replicating |\n",
      "|:----------------------------------|----------------------:|\n",
      "| Plate2_PCO_6ch_4site_10XPA        |                  35.6 |\n",
      "| Plate3_PCO_6ch_4site_10XPA_Crest  |                  50   |\n",
      "| Plate3_PCO_6ch_4site_10XPA_Crestz |                  51.1 |\n"
     ]
    }
   ],
   "source": [
    "print(corr_replicating_df[['Description', 'Percent_Replicating']].to_markdown(index=False))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "242adbbe",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x1296 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "utils.distribution_plot(df=corr_replicating_df, output_file=\"1.percent_replicating.png\", metric=\"Percent Replicating\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "12c8718f",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
